#!/bin/bash

init () {
	go work init

	for subdirectory in "api" "common" "runner"; do
		go work use ./$subdirectory
	done

	go mod download

	for subdirectory in "api" "mysql" "runner"; do
		ln -s $PWD/config $PWD/$subdirectory
	done
}

update () {
	for subdirectory in "api" "common" "runner"; do
		cd ./$subdirectory
		go get -u ./...
		go mod tidy
		cd ../
	done
}

build () {
	for subdirectory in "api" "mysql" "runner"; do
		cd ./$subdirectory
		./taskfile build
		cd ../
	done
}

dev () {
	reflex -s -g reflex.conf -- reflex -c reflex.conf $@
}

docker () {
	build () {
		for subdirectory in "api" "runner"; do
			command docker build -t harvest-$subdirectory -f $subdirectory/Dockerfile .
		done
	}

	run () {
		command docker compose up -d
	}

	$@
}

lint () {
	golangci-lint run --issues-exit-code 0 $@
}

format () {
	lint --fix $@
}

case "$@" in
	"build mysql file*")
		# Use absolute path to avoid naming issues when cd'ing into dir
		filename="$PWD/$4"
		cd ./mysql
		./taskfile build file $filename ${@:5}
		exit $?
		;;
	"install api"*|\
	"install runner"*|\
	"build api"*|\
	"build mysql"*|\
	"build runner"*|\
	"run api"*|\
	"run runner"*|\
	"connect mysql"*)
		cd ./$2
		./taskfile $1 ${@:3}
		exit $?
		;;
esac

if [[ $(type -t $1) == function ]]; then
	$@
else
	echo "Command \"$@\" not found"
fi